<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Mind]]></title><description><![CDATA[read the world, read my soul]]></description><link>http://mind.deep.tw</link><image><url>http://mind.deep.tw/favicon.ico</url><title>Mind</title><link>http://mind.deep.tw</link></image><generator>NodeJS RSS Module</generator><lastBuildDate>Sun, 02 Jun 2013 10:33:29 GMT</lastBuildDate><atom:link href="http:/mind.deep.tw/rss.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[The Clean Coder notes]]></title><description><![CDATA[<h1>The Clean Coder notes</h1>
<h3>前言</h3>
<p>最近常買一些奇怪的書，寫一些奇怪的筆記。</p>
<p>讓我們繼續看下去</p>
<h3>The Clean Coder</h3>
<p><img src="http://ecx.images-amazon.com/images/I/51BSQqef%2B6L.jpg" alt="The Clean Coder"></p>
<p>中文書名：程序員的職業素養</p>
<h3>小牢騷</h3>
<p>作者的媽媽提及，只有傻子才在沒找到下個工作前就提辭呈。放眼望去，我工作以來一直都是這樣傻，沒為自己留後路。之後應該也是一樣吧，也希望老天繼續讓我這傻人有些傻福。</p>
<h3>素養</h3>
<ul>
<li>素養，強調的不是天賦的神秘，也不是技術的高深，而是持續積湛的結晶。</li>
<li>職業素養，讓你成為專業人士。讓你的小孩可以說：爸爸，我以後要跟你一樣當軟體工程師！</li>
<li>專業，象徵著榮譽與驕傲，而且也明確意味著責任與義務。</li>
<li>非專業人士，收拾殘局的，通常是雇主；專業人士通常都是自己擦屁股。</li>
<li>軟體釋出前，一定要做好測試！你不知道你這行 code 也許帶來的是 1 億元的損失。</li>
</ul>
<h3>測試</h3>
<ul>
<li>開發、修補軟體功能前，「先研究不傷身體，再講求效果」，如果作不到這樣，那麼至少也應該要：<ul>
<li>不要破壞既有軟體的功能<ul>
<li>讓 QA 找不出任何問題</li>
<li>要求百分百程式碼測試覆蓋(提到了 TDD)</li>
<li>自動化 QA</li>
</ul>
</li>
<li>不要破壞結構 <ul>
<li>(如果你希望自己的軟體靈活可變，那就應該時常修改它)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3>職業道德</h3>
<ul>
<li><p>請靠自己；不該將自己的職業發展寄望在雇主，那是自己該做的事。</p>
<ul>
<li>雇主沒有義務確保你在職場處於不敗之地</li>
<li>雇主沒有義務送你參加各種研討會或買書籍給你充電</li>
<li>如果你的雇主作到上述幾點，只能說明他們待你不薄，但這不代表是他們該做的</li>
<li>如果你的雇主沒有為你作到這些，你就自己想辦法作 </li>
<li>你應該計畫每週工作 60 小時，前 40 小時給雇主，後 20 小時你應該自己看書、練習、學習自己的職業技能</li>
<li>那 20 小時，就是你的熱情、動力來源，就是你升級的時刻！</li>
<li>所謂術業有專攻，那也是投入時間去作的</li>
</ul>
</li>
<li><p>瞭解你的工作領域</p>
<ul>
<li>瞭解舊的思維，投入新的想法</li>
<li>堅持學習下去，不能落伍；就像你不會找不會變通的律師跟會計師</li>
<li>練習：專業人士往往勤學苦幹</li>
<li>合作：與他人一起編程、一起練習、一起設計、一起計畫；但也珍惜獨自開發的時光</li>
<li>輔導：教學相長</li>
<li>雇主要解決的問題就是你要解決的問題</li>
<li>謙遜：專業人士不會嘲諷別人，只會在自作自受時先笑自己</li>
</ul>
</li>
</ul>
<h3>懂得說「不」</h3>
<ul>
<li>「能就是能，不能就是不能。不要說『試試看』」</li>
<li>要有團隊精神，對隊友伸出援手</li>
<li>別忘記客戶隨時都會新增功能，儘管他給你很急的 deadline；該說不，還是要說不。</li>
<li>如果你該說不時卻沒有說不，那你正在把你的 PM 推向懸崖。</li>
</ul>
<h3>承諾</h3>
<ul>
<li>口頭承諾自己將會去作</li>
<li>心裡認真對待說出的承諾</li>
<li>實際付出行動</li>
<li>只能作自己的承諾，不作他方的承諾</li>
</ul>
<h3>編程</h3>
<ul>
<li>程式碼必須可以正常運作</li>
<li>程式碼必須可以幫你解決客戶的問題</li>
<li>程式碼必須跟既有系統結合地天衣無縫</li>
<li>其他程式員必須可以讀懂你的程式碼</li>
<li>不在以下情況產出代碼：<ul>
<li>熬夜</li>
<li>焦慮</li>
<li>無法專注</li>
</ul>
</li>
<li>讓自己進入高效率狀態</li>
</ul>
<h3>被打擾時</h3>
<ul>
<li>當別人打擾你時，請別惡言相向；禮貌地問一下有什麼可以協助對方的地方</li>
</ul>
<h3>寫不出 code 時</h3>
<ul>
<li>離開座位、別死盯螢幕，找人聊天或中斷一會兒、讀一下自己有興趣的書，或試試 pair programming 應該有效</li>
<li>累了就要休息，懂得休息</li>
<li>很多想法會在你洗澡時冒出來</li>
<li>幫助別人，也接受別人的幫助</li>
</ul>
<h3>測試</h3>
<ul>
<li>一定要寫測試</li>
<li>一定要保留 QA 時間</li>
</ul>
<h3>TDD</h3>
<ul>
<li><p>TDD 的三項準則(希望每 30 秒測試一次 )：</p>
<ul>
<li>在寫好失敗的單元測試前，不要撰寫任何代碼</li>
<li>只要有一單元測試失敗，就不要再寫測試代碼</li>
<li>產品代碼只要讓當前失敗的單元測試通過就好，不要多寫</li>
</ul>
</li>
<li><p>TDD 的優勢</p>
<ul>
<li>你對程式碼的確定及把握</li>
<li>缺陷的掌握度</li>
<li>給予你更動既有代碼的勇氣</li>
<li>單元測試的程式碼，就是最好的代碼範例</li>
<li>是一種好的程式設計方式</li>
<li>專業人士會使用 TDD</li>
</ul>
</li>
</ul>
<h3>時常練習</h3>
<ul>
<li>沒什麼好說的，就是多練習</li>
</ul>
<h3>驗收測試</h3>
<ul>
<li>需求溝通</li>
<li>完成驗收的定義</li>
<li>自動化測試</li>
<li>驗收測試是寫給業務方的，單元測試是寫給程式員看的</li>
<li>QA 應該找不到任何錯誤</li>
<li>CI 系統</li>
<li>自動化測試金字塔(底 -&gt; 頂)：<ul>
<li>單元測試</li>
<li>組件測試</li>
<li>集成測試</li>
<li>系統測試</li>
<li>人工探索式測試</li>
</ul>
</li>
</ul>
<h3>時間管理</h3>
<ul>
<li>不要有太多會議，要懂得拒絕</li>
<li>站著開會，大家依序回答：<ul>
<li>我昨天做了什麼</li>
<li>我今天預計作什麼</li>
<li>我遇到了什麼問題</li>
</ul>
</li>
<li>如果遇到爭論，超過 5-30 分鐘，那麼就停止爭論，用「數據」來說話</li>
<li>蕃茄工作法(廿五分鐘工作，五分鐘休息，完成四段蕃茄鐘後，休息 30 分鐘)</li>
</ul>
<h3>面對壓力時</h3>
<ul>
<li>不要驚慌失措</li>
<li>記得溝通</li>
<li>還是要依照紀律原則做事</li>
<li>尋求幫助</li>
</ul>
<h3>有凝聚力的團隊</h3>
<ul>
<li>12 人(最少 3 人或最多 20 人)</li>
<li>程式員x7、測試人員x2、分析師x2、項目經理x1</li>
</ul>
<h3>結語</h3>
<p>又囫圇吞棗讀完這本(簡體)書了，很多想法還是要自己 try 才會知道。</p>
<p>如果對這本書有興趣的人可以跟我索取 :)</p>
]]></description><link>/post/2013/the-clean-coder-notes.html</link><guid isPermaLink="true">/post/2013/the-clean-coder-notes.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Sat, 01 Jun 2013 18:40:02 GMT</pubDate></item><item><title><![CDATA[FreeBSD Passenger 4.0.5 Cannot execute bash]]></title><description><![CDATA[<h1>FreeBSD Passenger 4.0.5 Cannot execute bash</h1>
<h3>前言</h3>
<p>原本用 Passenger 3.0.19 好好的，手癢更新 FreeBSD server, 卻遇到了這樣的訊息：</p>
<pre><code>[ 2013-06-02 11:29:04.7868 23043/0x802060c00 Pool2/Spawner.h:159 ]: [App 23054 stderr] Cannot execute &quot;bash&quot;: No such file or directory (errno=2)
terminate called after throwing an instance of &#39;std::bad_cast&#39;</code></pre>
<h3>暫時解法</h3>
<p>查資料發現這篇 <a href="https://groups.google.com/forum/?fromgroups#!topic/phusion-passenger/u0QN_F09UpI">Passenger 4.0.4/4.0.5 - Cannot execute &quot;bash&quot;</a></p>
<p>於是直接用比較不好的解法：</p>
<pre><code>sudo ln -s /usr/local/bin/bash /bin/bash</code></pre>
<h3>結語</h3>
<p>好心的 port maintainer, 會不會解決這個 issue 呢？</p>
<p>前提是，該來 send-pr 先？</p>
]]></description><link>/post/2013/freebsd-passenger-4.0.5-cannot-execute-bash.html</link><guid isPermaLink="true">/post/2013/freebsd-passenger-4.0.5-cannot-execute-bash.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Sun, 02 Jun 2013 03:52:35 GMT</pubDate></item><item><title><![CDATA[C in a nutshell notes]]></title><description><![CDATA[<h1>C in a nutshell notes</h1>
<p><img src="http://ecx.images-amazon.com/images/I/813eelH3joL._SL1500_.jpg" alt="C in a Nutshell"></p>
<p>沒錯，開始讀 C。</p>
<p>雖然這本開宗明義就說：「這本不適合初學者」，不過還是先看看。</p>
<p>為什麼要讀 C？因為就如同那句，「不想在巨壁裡被當家畜豢養著啊！」</p>
<h3>不小心又繞遠路</h3>
<p>這裡開始會放一些筆記，不過由於用 FreeBSD 桌面，沒有找到好用的 markdown editor, 所以分神找了一下。</p>
<p>發現 <code>uberwriter</code> 跟 <code>retext</code> 這兩個用 python 寫的 editor, 只是，一個似乎缺 module 無法在 FreeBSD 用，一個需要 qt4，所以又放棄，先來用 vim 寫紀錄好了。</p>
<h3>待續</h3>
<p>因為繞遠路順便更新 FreeBSD server, 所以又有新東西要筆記，此篇暫時打住。</p>
]]></description><link>/post/2013/c-in-a-nutshell-notes.html</link><guid isPermaLink="true">/post/2013/c-in-a-nutshell-notes.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Sun, 02 Jun 2013 02:33:16 GMT</pubDate></item><item><title><![CDATA[rails 3 best practice article]]></title><description><![CDATA[<h1>rails 3 best practice article</h1>
<p>偶然間在臉書找技術文，發現這個連結：</p>
<p><a href="https://github.com/JuanitoFatas/rails-style-guide/blob/master/README-zhTW.md">rails-style-guide</a></p>
<p>其原文版：
<a href="https://github.com/bbatsov/rails-style-guide">rails-style-guide</a></p>
<p>一時間可能沒有辦法完全看完。</p>
<h3>節錄一些推薦的 gem 如下：</h3>
<ul>
<li><a href="https://github.com/gregbell/active_admin">active_admin</a> - 有了 ActiveAdmin，創建 Rails 應用的管理介面就像兒戲。你會有一個很好的儀錶盤，圖形化 CRUD 介面以及更多東西。非常靈活且可客製化。</li>
<li><a href="https://github.com/charliesome/better_errors">better_errors</a> - Better Errors 用更好更有效的錯誤頁面，取代了 Rails 標準的錯誤頁面。不僅可用在 Rails，任何將 Rack 當作中介軟體的 app 都可使用。</li>
<li><a href="https://github.com/flyerhzm/bullet">bullet</a> - Bullet 就是為了幫助提昇應用的效能（藉由減少查詢）而打造的 gem。會在你開發應用時，替你注意你的查詢，並在需要 eager loading (N+1 查詢)時、或你在不必要的情況使用 eager loading 時，或是在應該要使用 counter cache 時，都會提醒你。</li>
<li><a href="https://github.com/ryanb/cancan">cancan</a> - CanCan 是一個權限管理的 gem，
讓你可以管制用戶可存取的支援。所有的授權都定義在一個檔案裡（ability.rb），並提供許多方便的方法，讓你檢查及確保整個應用內權限是否是可得的。</li>
<li><a href="https://github.com/jnicklas/capybara">capybara</a> - Capybara 旨在簡化整合測試 Rack 應用的過程，像是 Rails、Sinatra 或 Merb。 Capybara 模擬了真實用戶使用 web 應用的互動。它與你測試在運行的驅動無關，並原生搭載 Rack::Test 及 Selenium 支持。透過外部 gem 支持 HtmlUnit、WebKit 及 env.js 。與 RSpec &amp; Cucumber 一起使用時工作良好。</li>
<li><a href="https://github.com/jnicklas/carrierwave">carrierwave</a> - Rails 最後一個文件上傳解決方案。支持上傳檔案（及很多其它的酷玩意的）的本機儲存與雲端儲存。圖片後處理與 ImageMagick 整合得非常好。</li>
<li><a href="https://github.com/bcardarella/client_side_validations">client_side_validations</a> -
一個美妙的 gem，替你從現有的服務器端模型驗證自動產生 Javascript 用戶端驗證。高度推薦！</li>
<li><a href="https://github.com/chriseppstein/compass">compass-rails</a> - 一個優秀的 gem，添加了某些 css 框架的支持。包括了 sass mixin 的蒐集，讓你減少 css 文件的程式碼並幫你解決瀏覽器相容問題。</li>
<li><a href="https://github.com/cucumber/cucumber-rails">cucumber-rails</a> - Cucumber 是一個由 Ruby 所寫，開發功能測試的頂級工具。 cucumber-rails 提供了 Cucumber 的 Rails 整合。</li>
<li><a href="https://github.com/plataformatec/devise">devise</a> - Devise 是 Rails 應用的一個完整解決方案。多數情況偏好使用 devise 來開始你的客制驗證方案。</li>
<li><a href="http://fabricationgem.org/">fabrication</a> - 一個很好的假資料產生器（編輯者的選擇）。</li>
<li><a href="https://github.com/thoughtbot/factory_girl">factory_girl</a> - 另一個 Fabrication 的選擇。一個成熟的假資料產生器。 Fabrication 的精神領袖先驅。</li>
<li><a href="https://github.com/EmmanuelOga/ffaker">ffaker</a> - 實用的 gem 來產生仿造的資料（名字、地址，等等）。</li>
<li><a href="https://github.com/pauldix/feedzirra">feedzirra</a> - 非常快速及靈活的 RSS 或 Atom 種子解析器。</li>
<li><a href="https://github.com/norman/friendly_id">friendly_id</a> - 透過使用某些具描述性的模型屬性，而不是使用 id，允許你創建人類可讀的網址。</li>
<li><a href="https://github.com/svenfuchs/globalize3.git">globalize3</a> - Globalize3 是 Globalize Gem 的後繼者，針對 ActiveRecord 3.x 設計。基於新的 I18n API 打造而成，並幫 ActiveRecord 模型新增了事務功能。</li>
<li><a href="https://github.com/guard/guard">guard</a> - 極佳的 gem 監控文件變化及任務的調用。搭載了很多實用的擴充。遠優於 autotest 與 <a href="https://github.com/mynyml/watchr">watchr</a>。</li>
<li><a href="https://github.com/indirect/haml-rails">haml-rails</a> - haml-rails 提供了 Haml 的 Rails 整合。</li>
<li><a href="http://haml-lang.com">haml</a> - Haml 是一個簡潔的模型語言，被很多人認為（包括我）遠優於Erb。</li>
<li><a href="https://github.com/amatsuda/kaminari">kaminari</a> - 很棒的分頁解決方案。</li>
<li><a href="https://github.com/notahat/machinist">machinist</a> - 假資料不好玩，Machinist 才好玩。</li>
<li><a href="https://github.com/rspec/rspec-rails">rspec-rails</a> - RSpec 是 Test::MiniTest 的取代者。我不高度推薦 RSpec。 rspec-rails 提供了 RSpec 的 Rails 整合。</li>
<li><a href="https://github.com/plataformatec/simple_form">simple_form</a> - 一旦用過 simple_form（或 formatastic），你就不想聽到關於 Rails 預設的表單。它是一個創造表單很棒的 DSL。</li>
<li><a href="https://github.com/fguillen/simplecov-rcov">simplecov-rcov</a> - 為了 SimpleCov 打造的 RCov formatter。若你想使用 SimpleCov 搭配 Hudson 持續整合服務器，很有用。</li>
<li><a href="https://github.com/colszowka/simplecov">simplecov</a> - 程式碼覆蓋率工具。不像 RCov，完全相容 Ruby 1.9。產生精美的報告。必須用！</li>
<li><a href="http://slim-lang.com">slim</a> - Slim 是一個簡潔的模版語言，被視為是遠遠優於 HAML(Erb 就更不用說了)的語言。唯一會阻止我大規模地使用它的是，主流 IDE 及編輯器對它的支持不好。但它的效能是非凡的。</li>
<li><a href="https://github.com/sporkrb/spork">spork</a> - 一個給測試框架（RSpec 或現今 Cucumber）用的 DRb 服務器，每次運行前確保分支出一個乾淨的測試狀態。簡單的說，預載很多測試環境的結果是大幅降低你的測試啟動時間，絕對必須用！</li>
<li><p><a href="https://github.com/sunspot/sunspot">sunspot</a> - 基於 SOLR 的全文檢索引擎。</p>
</li>
<li><p><a href="https://github.com/ddollar/foreman">foreman</a> - 若你的專案依賴各種外部的進程使用 foreman 來管理它們。</p>
</li>
</ul>
<h3>其他推薦閱讀</h3>
<ul>
<li><a href="http://www.amazon.com/Rails-Way-Addison-Wesley-Professional-Ruby/dp/0321601661">The Rails 3 Way</a></li>
<li><a href="http://guides.rubyonrails.org/">Ruby on Rails Guides</a></li>
<li><a href="http://pragprog.com/book/achbd/the-rspec-book">The RSpec Book</a></li>
<li><a href="http://pragprog.com/book/hwcuc/the-cucumber-book">The Cucumber Book</a></li>
<li><a href="https://leanpub.com/everydayrailsrspec">Everyday Rails Testing with RSpec</a> </li>
</ul>
]]></description><link>/post/2013/rails-3-best-practice-article.html</link><guid isPermaLink="true">/post/2013/rails-3-best-practice-article.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Fri, 31 May 2013 21:45:20 GMT</pubDate></item><item><title><![CDATA[3 years have passed]]></title><description><![CDATA[<h1>3 years have passed</h1>
<p>因為，所以不服管教的我，在那天主動簽了那份文件，而在今天這個特別的日子，離開，滿了三年。</p>
<p>寫在文件內的原因，也只有兩個字：創業。</p>
<p>那是假話。</p>
<p>自覺沒本事，創什麼業？充其量也只是餬口飯吃而已；真正原因是不服管教；而這樣的日子，也終於過了三年。</p>
<p>三年了，日子並沒有如我想像中的容易，自身的技能也每每在看到高手出現時，反省自己又落後人家一大截，正所謂別人都上外太空而我還在殺豬公。</p>
<p>三年了，感謝諸多朋友的幫忙與介紹，讓小弟還可以在網路上發發廢文，日子也還過得下去；我會繼續努力一邊餬口，一邊朝著做出對社會有益的東西，這種滿足內心以為自己是好人的方向前進。</p>
<p>三年了，有案就接，有工作就做，有飯就吃，有時間就寫 code 賺錢錢。但我們仍沒忘記要持續為這可愛的人們繼續設計，繼續想像，繼續創作。</p>
<p>三年了，不小心也跟心愛的人捏出了個女兒，儘管時間在洗奶瓶跟洗便當中，過得特別漫長，但也因為這樣，可以讓我傷害最多的眼睛可以得到適度的休息，並且在懷抱著女兒的同時，發現自己還活著，有了新的生命正需要我去呵護。</p>
<p>希望今年下半年一樣順心，希望這樣的日子還可以假裝愜意地過下去，我會持續找尋事物的本質，用我喜歡的、用設計師喜歡的、用客戶喜歡的，那種單純的美，繼續把一件件事情，慢慢做好。</p>
<p>感謝公司所有人的幫忙與扶持，希望可以站穩腳步，開發真正屬於設計師眼界的產品。儘管汪洋遼闊，用自己輕盈的身手，滑行。</p>
]]></description><link>/post/2013/3-years-have-passed.html</link><guid isPermaLink="true">/post/2013/3-years-have-passed.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Fri, 31 May 2013 17:04:26 GMT</pubDate></item><item><title><![CDATA[copy or mv image file to ios retina display scripts]]></title><description><![CDATA[<h1>copy or mv image file to ios retina display scripts</h1>
<h3>前言</h3>
<p>瑣碎的事情總是太多。</p>
<p>廢話不多說，直接切入正題。</p>
<h3>情境</h3>
<p>你自己找了一堆圖檔，但是圖檔名稱都沒有 @2x，你需要用 command line 快速複製一份 @2x 或更改檔名</p>
<h3>script</h3>
<p>更改檔名：</p>
<pre><code>$ ls |cut -d &#39;.&#39; -f 1|awk &#39;{print &quot;mv &quot;$1&quot;.png &quot;$1&quot;@2x.png&quot;}&#39;|sh</code></pre>
<p>複製成 @2x：</p>
<pre><code>$ ls |cut -d &#39;.&#39; -f 1|awk &#39;{print &quot;cp &quot;$1&quot;.png &quot;$1&quot;@2x.png&quot;}&#39;|sh</code></pre>
<h3>說實話</h3>
<p>你沒事要去哪裡找一堆圖檔？</p>
<p>用 <a href="https://github.com/odyniec/font-awesome-to-png">這個 python script</a> 幫你把所有 fontawesome 的字，轉成你指定大小的圖檔吧。</p>
<p>(先下載 fontawesome 的字型才有用喔)</p>
<p>比如你要黑色的圖：</p>
<pre><code>$ ./font-awesome-to-png.py --color &#39;#111&#39; --size 80 ALL</code></pre>
<h3>結語</h3>
<p>就這樣，要不沒事幹嘛改檔名呢？</p>
]]></description><link>/post/2013/copy-or-mv-image-file-to-ios-retina-display-scripts.html</link><guid isPermaLink="true">/post/2013/copy-or-mv-image-file-to-ios-retina-display-scripts.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Sat, 18 May 2013 01:24:18 GMT</pubDate></item><item><title><![CDATA[the days when I was young]]></title><description><![CDATA[<h1>the days when I was young</h1>
<p>於是，在這天的清晨，開始反省自己過去那些日子做了什麼事。</p>
<p>一事無成。</p>
<p>小時候因為…所以從此之後沒在過什麼節日。這些年來，嘴裡喊著要翻身，卻也沒做出什麼翻身的事情。</p>
<p>時間就這樣過去，我也就這樣老去；在僅存的日子裡，一樣還是為了年少的短缺，想要翻身，想要跟別人一樣過幸福快樂的日子。</p>
<p>現在可以在網路上發廢文，其實就代表已經有幸福快樂了 :)</p>
<p>不管怎樣，我愛我的老婆、女兒，以及家人，家庭和樂就不會有另一個跟我一樣不怎麼過節，每逢過節必傷心的人存在。</p>
<p>說再多都沒有用，就算這輩子翻不了身，也沒有如同年少時候的幻想(娶有錢的太太，然後我學中醫可以不用擔心生計，免費幫人義診)，還是會去學中醫，還是會繼續想要翻身。</p>
<p>這就是我的人生。</p>
<p>在參加過 AWS 面對沒幾個人認識的場子，就會知道世界真大，我還那麼地渺小；別人都上外太空我還在殺豬公(而且我連殺豬刀都沒有)。</p>
<p>這世界的運行一定還有一種規則我不知道的，我要找出來，想辦法讓自己不能翻身也要扭轉一下。</p>
<p>加油，逐漸模糊的眼睛及開始萌芽的希望。</p>
]]></description><link>/post/2013/the-days-when-i-was-young.html</link><guid isPermaLink="true">/post/2013/the-days-when-i-was-young.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Sat, 18 May 2013 00:55:45 GMT</pubDate></item><item><title><![CDATA[rails carrierwave image_tag tips]]></title><description><![CDATA[<h1>rails carrierwave image_tag tips</h1>
<h3>緣起</h3>
<p>因為連抄都抄錯，所以才要筆記一下。</p>
<p>Carrierwave 的 gem <a href="https://github.com/carrierwaveuploader/carrierwave">在這裡</a>。</p>
<h3>簡易有無圖片的判斷</h3>
<p>有時候圖片上傳並非必要，所以後端要 show 照片時，範例寫著：</p>
<pre><code>&lt;%= image_tag(@user.avatar_url) if @user.avatar? %&gt;</code></pre>
<p>亦即，我忘記 if @user.avatar? 後面的 <code>?</code></p>
<p>忘記加 <code>?</code> 會發生什麼事？就是如果沒那張圖，那麼 rails 在 render 該 view 時就會報錯：500 Internal Server Error</p>
<h3>結語</h3>
<p>用 rails 當然要懂一下 ruby，要不一定會有些細節容易出包的 Orz...</p>
]]></description><link>/post/2013/rails-carrierwave-image_tag-tips.html</link><guid isPermaLink="true">/post/2013/rails-carrierwave-image_tag-tips.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Thu, 16 May 2013 21:55:45 GMT</pubDate></item><item><title><![CDATA[rails flash notice notes]]></title><description><![CDATA[<h1>rails flash notice notes</h1>
<h3>緣起</h3>
<p>在寫 rails form 的時候，做個成功、失敗的頁面。</p>
<h3>How?</h3>
<h4>Controller</h4>
<p>在你想要中斷流程，redirect 到 result 頁面時(當然，有 result 這個 action)：</p>
<pre><code>format.html {
    redirect_to :action =&gt; &#39;result&#39;
    flash[:notice] = &#39;要顯示的訊息&#39;
}</code></pre>
<h4>View</h4>
<pre><code>&lt;% if flash[:notice] %&gt;&lt;%= notice %&gt;&lt;% end %&gt;</code></pre>
<h3>結語</h3>
<p>是的，小東西也記錄一下 :)</p>
]]></description><link>/post/2013/rails-flash-notice-notes.html</link><guid isPermaLink="true">/post/2013/rails-flash-notice-notes.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Thu, 16 May 2013 20:40:25 GMT</pubDate></item><item><title><![CDATA[programming in coffeescript notes]]></title><description><![CDATA[<h1>programming in coffeescript notes</h1>
<h3>緣起</h3>
<p>那天因為某人要買大師級的參考書，所以也去書局閒晃一下。很幸運地發現這本書，應該可以稍微補足我殘缺的 coffeescript 知識，當然荷包就失血了。</p>
<p>書名：<a href="http://www.amazon.com/Programming-CoffeeScript-Developers-Library-Bates/dp/032182010X">Programming in CoffeeScript (Developer&#39;s Library)</a></p>
<p>書封(取自 Amazon)：</p>
<p><img src="http://ecx.images-amazon.com/images/I/51egrMIEBNL.jpg" alt="Programming in CoffeeScript (Developer&#39;s Library)"></p>
<p>不過我看的是對岸翻譯版：</p>
<p>書名：<a href="http://www.tenlong.com.tw/items/711530193X?item_id=537305">CoffeeScript 程序設計</a></p>
<p>書封，取自豆瓣：</p>
<p><img src="http://img3.douban.com/lpic/s24642727.jpg" alt="CoffeeScript 程序設計"></p>
<h3>小筆記</h3>
<h4>scope</h4>
<p>範例1, 以下會輸出都是 6</p>
<pre><code>for x in [1..5]
    setTimeout -&gt;
        console.log x
    , 1</code></pre>
<p>範例2, 用了 do 後，會出現 1~5</p>
<pre><code>for x in [1..5]
    do (x) -&gt;
        setTimeout -&gt;
            console.log x
        , 1</code></pre>
<p>為什麼會這樣？因為就是 scope。在範例1 <code>setTimeout</code> 等待的同時，我的電腦已經在這等待時間內執行完 1~5 了。建議直接看編譯成 js 的後的結果就知道了。</p>
<h4>super</h4>
<p>嗯，好用，要小心用 ;)</p>
<h4>Cake 與 Cakefile</h4>
<p>範例(Cakefile)：</p>
<pre><code>option &#39;-n&#39;, &#39;--name [NAME]&#39;, &#39;name you want to say hello&#39;
task &quot;hello&quot;, &quot;Say hello to someone or say Hello, World&quot;, (option) -&gt;
    if option.name?        
        console.log &quot;Hello, #{option.name}&quot;
    else
        console.log &quot;Hello, World&quot;</code></pre>
<p>然後在 console 分別執行 <code>cake</code> 與 <code>cake hello</code>, <code>cake -n pct hello</code> 看結果</p>
<h4>Jasmine</h4>
<p>書中提到的是 ruby gem, 不過我找到 <a href="https://github.com/mhevery/jasmine-node">jasmine-node</a>，所以直接 </p>
<pre><code>npm install -g jasmine-node</code></pre>
<h3>結語</h3>
<p>這本書快看完了，可以準備送給大家了 :D</p>
<h3>後記</h3>
<p>這本書已經被 Williams 預定了 :)</p>
]]></description><link>/post/2013/programming-in-coffeescript-notes.html</link><guid isPermaLink="true">/post/2013/programming-in-coffeescript-notes.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Thu, 16 May 2013 23:11:36 GMT</pubDate></item><item><title><![CDATA[Rails custom form label name with auto input focus]]></title><description><![CDATA[<h1>Rails custom form label name with auto input focus</h1>
<h3>前言</h3>
<p>這種怪怪的英文描述也只有我寫得出來</p>
<h3>緣起</h3>
<p>身為台灣開發者，form label 用中文顯示也是正常。但 rails g scaffold 幫忙 gen 好的 code 就不會讓你點了 label 後就自動 focus 到該 label 指定的 input</p>
<h3>解法</h3>
<p>很簡單，這跟 rails form 沒有關係，這是 label for 設定好就好的，所以範例如下，重點在<code>:for =&gt; &#39;&lt;前綴字&gt;_id_num&#39;</code>：</p>
<pre><code>&lt;%= f.label &quot;身份證字號/居留證號&quot;, :for =&gt; &#39;&lt;前綴字&gt;_id_num&#39; %&gt;
&lt;%= f.text_field :id_num %&gt;</code></pre>
<p>如果你用的是 simple_form, 就不用考慮太多：</p>
<pre><code>&lt;%= f.input :id_num, :label =&gt; &quot;身份證字號/居留證號&quot; %&gt;</code></pre>
<h3>結語</h3>
<p>這麼簡單也要 PO 文？沒錯，假裝一下這 blog 很豐富。</p>
<p>實際上卻也沒幾個人路過。</p>
]]></description><link>/post/2013/rails-custom-form-label-name-with-auto-input-focus.html</link><guid isPermaLink="true">/post/2013/rails-custom-form-label-name-with-auto-input-focus.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Wed, 15 May 2013 23:29:09 GMT</pubDate></item><item><title><![CDATA[Add terms to rails form]]></title><description><![CDATA[<h1>Add terms to rails form</h1>
<h3>前言</h3>
<p>因為還是嫩咖，所以邊作邊記錄下來，應該不是最佳解，但可以請有路過、看不過的人，幫忙糾正。</p>
<h3>緣起</h3>
<p>在您平日的操作中，送出表單前，是不是都要勾取「我同意」「我已閱讀且同意...」那些約定呢？</p>
<h3>How?</h3>
<p>情況一、原本就有考慮到這些事情，所以早就把 terms 建進資料庫，所以只要在 model 有：</p>
<pre><code># terms
attr_accessible :terms
validates :terms, :presence =&gt; { :message =&gt; &#39;不能為空&#39;}
validates_numericality_of :terms, :equal_to =&gt; 1,  :message =&gt; &#39;需要同意活動聲明&#39;</code></pre>
<p>情況二、原本沒考慮，或是 terms 本來就不該是欄位，那也沒關係，只要在 model 加入</p>
<pre><code># terms
attr_accessor :terms #就是比上例多這行
attr_accessible :terms
validates :terms, :presence =&gt; { :message =&gt; &#39;不能為空&#39;}
validates_numericality_of :terms, :equal_to =&gt; 1,  :message =&gt; &#39;需要同意活動聲明&#39;</code></pre>
<p>然後，不管是情況一、二，在 form 裡面加入底下這行，就可以運作了！(不過 controller 當然本來就要 ready 好)</p>
<pre><code>&lt;%= f.input :terms, as: :boolean, :label =&gt; &quot;我已閱讀並同意遵守...之規定。&quot; %&gt;</code></pre>
<h3>結語</h3>
<p>一樣，人太廢所以需要邊學邊作，也需要各位幫忙指正了 :)</p>
]]></description><link>/post/2013/add-terms-to-rails-form.html</link><guid isPermaLink="true">/post/2013/add-terms-to-rails-form.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Wed, 15 May 2013 22:51:21 GMT</pubDate></item><item><title><![CDATA[rails 406 and 422 error]]></title><description><![CDATA[<h1>rails 406 and 422 error</h1>
<h3>緣起</h3>
<p>身為 rails 新手，常碰壁也是應該的</p>
<p>這是在處理前後端 route 不一致，且要客製前端 url + ajax post 時不小心撞的壁</p>
<p><del>而且撞壁還要亂寫記錄來害別人</del>，實在不可取。所以請不小心路過的大大們幫忙指正，謝謝！</p>
<h3>HTTP 406 Not Acceptable?</h3>
<p>會遇到這情形，是因為不管是 form_for 或 simple_form_for 如果沒有指定 json 格式的回傳，就會採用 html 回傳。</p>
<p>但是偏偏你已經拔除 render html 的相關 function，所以就報錯了。</p>
<p>因此，在 form_for 或 simple_form_for 指定 :url 到 json url 就好了</p>
<h3>422 Unprocessable Entity Error?</h3>
<p>你已經 pass 了上述 406 那關，但是你又看到了 422 error，why？</p>
<p>先檢查一下你 post form 時，有無漏掉欄位、或是格式不對沒有被 server 驗證通過。</p>
<p>只要格式符合，應該就會正常 pass 了 :)</p>
<h3>結語</h3>
<p>Web 技術學不完，繼續加油。</p>
]]></description><link>/post/2013/rails-406-and-422-error.html</link><guid isPermaLink="true">/post/2013/rails-406-and-422-error.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 14 May 2013 20:37:04 GMT</pubDate></item><item><title><![CDATA[rails model namespace notes]]></title><description><![CDATA[<h1>rails model namespace notes</h1>
<h3>緣起</h3>
<p>有時候做後台，使用 rails g scaffold 是可以很快速的，但，在前後台切分的架構，有時候也不是把後台的程式部分搬過來就可以滿足一切需求</p>
<h3>Error log?</h3>
<pre><code>找不到 &quot;books&quot; 這個 table (看範例會知道這 table 不存在，存在的是 member_books)</code></pre>
<h3>範例</h3>
<p>後台：</p>
<pre><code>$ rails g scaffold member/books title:string</code></pre>
<p>然後你想說就把產生的 member/books model copy 一份到前台，在來進行調整 &lt;-- 這當然沒問題。</p>
<p>問題在於，有無 copy 完整。</p>
<p>今天遇到的初學者的錯誤就是沒 copy 完整，所以漏了 copy model/member.rb，這個檔案內容是：</p>
<pre><code>module Member
    def self.table_name_prefix
        &#39;member_&#39;
    end
end</code></pre>
<p>有了幫你設定 table name prefix 的檔案後，問題自然就迎刃而解了。</p>
<h3>參考資料</h3>
<p><a href="http://stackoverflow.com/questions/5852626/handling-namespace-models-classes-in-namespace">Handling namespace models (classes) in namespace</a></p>
<h3>結語</h3>
<p>經驗是靠撞壁出來的 &lt;-- 我是說我自己</p>
]]></description><link>/post/2013/rails-model-namespace-notes.html</link><guid isPermaLink="true">/post/2013/rails-model-namespace-notes.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 14 May 2013 18:26:31 GMT</pubDate></item><item><title><![CDATA[upgrade rails4 beta1 to rc1]]></title><description><![CDATA[<h1>upgrade rails4 beta1 to rc1</h1>
<h3>緣起</h3>
<p>這還要什麼緣起？就是 rc1 出現所以就要升級到 rc1 啦</p>
<p>那還要寫這篇幹嘛？因為單純修改 Gemfile 後，rails s 會再起不能，所以記錄一下步驟。</p>
<h3>錯誤訊息</h3>
<pre><code>gems/railties-4.0.0.rc1/lib/rails/application/configuration.rb:144:in `const_get&#39;: uninitialized constant ActionDispatch::Session::EncryptedCookieStore (NameError)</code></pre>
<h3>How?</h3>
<ol>
<li><p>把 Gemfile 裡面的 rails 相關 gem，由 4.0.0.beta1 全部改為 4.0.0.rc1</p>
</li>
<li><p>把 config/initializers/session_store.rb 中的</p>
<pre><code> :encrypted_cookie_store</code></pre>
<p> 換成</p>
<pre><code> :cookie_store</code></pre>
</li>
<li><p>重新 rails s 吧</p>
</li>
</ol>
<h3>結語</h3>
<p>還沒學會爬就想要飛，碰壁是應該的</p>
<h3>參考資料</h3>
<p><a href="http://qiita.com/items/6e19c246d608abd9795b">rails4.0.0.beta1 -&gt; rails4.0.0.rc1 migration guide</a></p>
]]></description><link>/post/2013/upgrade-rails4-beta1-to-rc1.html</link><guid isPermaLink="true">/post/2013/upgrade-rails4-beta1-to-rc1.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 14 May 2013 18:16:43 GMT</pubDate></item><item><title><![CDATA[FreeBSD binary update]]></title><description><![CDATA[<h1>FreeBSD binary update</h1>
<h3>緣起</h3>
<p>其實這篇是要講 <code>freebsd-update</code> 這個 command</p>
<p>因為沒看什麼文件，所以以下都是胡亂猜測，如果不小心害到人，就只能先說對不起。(當然歡迎大家指正)</p>
<p><del>謎之聲：這樣的文件你也敢丟出來害人</del></p>
<h3>怎麼用</h3>
<p>同 RELEASE 版本的更新：</p>
<pre><code># freebsd-update fetch
# freebsd-update install
# mergemaster -U
# portmaster -afvG (我是用破大師進行 package 更新，可以改成 portupgrade -avf)
# reboot</code></pre>
<p>跨 RELEASE 版本的更新：</p>
<pre><code># freebsd-update upgrade -r 9.1-RELEASE
# freebsd-update install
# portmaster -afvG (我是用破大師進行 package 更新，可以改成 portupgrade -avf)
# reboot
# freebsd-update install
# mergemaster -U
# reboot</code></pre>
<h3>參考資料</h3>
<p><a href="http://www.freebsd.org/doc/zh_CN/books/handbook/updating-upgrading-freebsdupdate.html">更新与升级 FreeBSD</a></p>
]]></description><link>/post/2013/freebsd-binary-update.html</link><guid isPermaLink="true">/post/2013/freebsd-binary-update.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Mon, 13 May 2013 22:25:44 GMT</pubDate></item><item><title><![CDATA[FreeBSD mysql server charset utf8]]></title><description><![CDATA[<h1>FreeBSD mysql server charset utf8</h1>
<h3>緣起</h3>
<p>最近在更新某版本 mysql-server 的時候，發現編碼不對。那個 latin1 又出現了！</p>
<p>但我明明在 ports.conf 有加上</p>
<pre><code>WITH_CHARSET=utf8
WITH_COLLATION=utf8_general_ci</code></pre>
<p>不過編譯還是無效。</p>
<h3>發現</h3>
<p>Google 後發現 <a href="http://bbs.chinaunix.net/thread-3853083-1-1.html">這篇</a>，上面就說某版本的 mysql-server 自從改用 cmake 來編譯後，已無那些選項。所以重編再多次，或是 make 時使用 <code>-DWITH_CHARSET=utf8</code> 這種，是無效的。</p>
<h3>解決</h3>
<p>雖然對岸作者 send-pr 不過沒有被該 port 的 maintainer 接受，所以就要在 server 改 Makefile</p>
<p>因為只是自己用，所以兩行就夠了：</p>
<pre><code>-DDEFAULT_CHARSET=utf8 \
-DDEFAULT_COLLATION=utf8_general_ci</code></pre>
<h3>my.cnf?</h3>
<p>明明就如 maintainer 說的，只要修改 my.cnf 就好了，不是嗎？</p>
<p>但，聽說 <b>要在產生 /var/db/mysql 前要先設定好 my.cnf</b> 才行，如果真是這樣，那對我而言，這不是解決方案而是撞壁方案了…</p>
<h3>結尾</h3>
<p>這種小事還要 Google, 我也真是技不如人啊 Orz...</p>
]]></description><link>/post/2013/freebsd-mysql-server-charset-utf8.html</link><guid isPermaLink="true">/post/2013/freebsd-mysql-server-charset-utf8.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Sun, 12 May 2013 00:12:16 GMT</pubDate></item><item><title><![CDATA[freebsd service command]]></title><description><![CDATA[<h1>freebsd service command</h1>
<p>今天一直重新編譯 mysql-server 看 mysql 編碼問題, 所以一直在 /usr/local/etc/rc.d/mysql-server restart</p>
<p>然後靈光一閃就想說，FreeBSD 應該會有對應於很多 Linux distro 都有的 <code>service</code> command 才對。</p>
<p>果不其然，查了一下，果然有！</p>
<p>下 <code>service</code> 後，出現：</p>
<pre><code>Usage:
service -e
service [-v] -l | -r
service [-v] &lt;rc.d script&gt; start|stop|etc.
service -h

-e    Show services that are enabled
-l    List all scripts in /etc/rc.d and /usr/local/etc/rc.d
-r    Show the results of boot time rcorder
-v    Verbose</code></pre>
<p>也就是之後就可以 <code>service mysql-server restart</code> 就好啦。</p>
<p>網友 @Nephom 說「相信我，用完整路徑會比較好....因為....有些command會沒寫好」。我是相信的，因為很久以前我也遇過 cd /usr/local/etc/rc.d; ./apache2x start 但是卻 start 不起來的情況，但使用 /usr/local/etc/rc.d/apache2x start 卻又正常 :P </p>
]]></description><link>/post/2013/freebsd-service-command.html</link><guid isPermaLink="true">/post/2013/freebsd-service-command.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Sat, 11 May 2013 23:56:12 GMT</pubDate></item><item><title><![CDATA[rails carrierwave image format error]]></title><description><![CDATA[<h1>rails carrierwave image format error</h1>
<h3>緣起</h3>
<p>在使用 carrierwave 時，在 Mac 沒問題，但在 production server 上傳圖片(.png)就失敗，而且錯誤訊息是：</p>
<pre><code>No decode delegate for this image format.</code></pre>
<h3>環境</h3>
<p>已經安裝 imagemagick</p>
<h3>資料查找</h3>
<p><a href="http://stackoverflow.com/questions/13023700/rmagick-fails-to-manipulate-png">http://stackoverflow.com/questions/13023700/rmagick-fails-to-manipulate-png</a></p>
<h3>重點</h3>
<p>使用以下指令查找 imagemagick 支援的 format：</p>
<pre><code>identify -list format</code></pre>
<p>發現沒有 PNG，所以在系統裝一下 libpng，解決！
(看要不要順便裝 libjpeg, jasper…，裝好 library 後還是不行，就重裝 imagemagick 吧)</p>
<h3>結語</h3>
<p>人太弱就會到處碰壁，又差人家一截了(泣)</p>
]]></description><link>/post/2013/rails-carrierwave-image-format-error.html</link><guid isPermaLink="true">/post/2013/rails-carrierwave-image-format-error.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Mon, 29 Apr 2013 18:42:03 GMT</pubDate></item><item><title><![CDATA[rails CSRF notes]]></title><description><![CDATA[<h1>rails CSRF notes</h1>
<h3>起源</h3>
<p>在一個案子中，需要讓 user 不需「登入」就可以執行 post。然後不小心用 curl post 居然也可以寫入，實在令人驚訝！</p>
<pre><code>2013/6/2 更新：rails 4 已經預設解決這樣的問題，所以使用 rails 4 請忽略以下廢文！</code></pre>
<h3>環境</h3>
<p>rails 3.2.13</p>
<h3>發現</h3>
<p>我們使用 ajax post 的方式來讓 user 貼文，不過這不是重點，重點是你的 post，不管是 ajax post, 一般 form post，或你遠端 curl post，你都可以發現你的 rails log 寫著：</p>
<pre><code>WARNING: Can&#39;t verify CSRF token authenticity</code></pre>
<p>BUT，這人生中最常出現的 BUT，會告訴你：</p>
<pre><code>Completed 201 Created in 50ms (Views: 4.6ms | ActiveRecord: 1.6ms)</code></pre>
<p>驚！！！</p>
<pre><code>也就是你以為 rails 幫你擋下 CSRF，結果根本還是被寫入了</code></pre>
<h3>為什麼？</h3>
<p>因為…讓我們來看連結：</p>
<ol>
<li><a href="http://stackoverflow.com/questions/7203304/warning-cant-verify-csrf-token-authenticity-rails?rq=1">有人有相同情形</a></li>
<li><a href="http://stackoverflow.com/questions/5000333/how-does-rails-csrf-protection-work">所以解法在這裡</a></li>
<li><a href="http://api.rubyonrails.org/classes/ActionController/RequestForgeryProtection.html#method-i-handle_unverified_request">為什麼會這樣</a></li>
</ol>
<p>白話翻譯：</p>
<ol>
<li><p>rails 的 CSRF 保護機制幫你判斷了非 GET 的操作但又沒提供 token，所以跟你說了：</p>
<pre><code> WARNING: Can&#39;t verify CSRF token authenticity</code></pre>
</li>
</ol>
<ol>
<li><p>rails 在沒有「登入」的狀況下，也沒幫你阻止，因為他預設的 <code>handle_unverified_request</code> 就只幫你做了 <code>reset_session</code></p>
</li>
<li><p>你沒有使用 session 機制, 你 reset session 根本阻止不了 CSRF，所以資料就這樣被警告一下，還是被寫入</p>
</li>
<li><p>你該怎麼辦？就直接在 ApplicationController 增加 <code>handle_unverified_request</code> 的 method, 自己判斷沒有 csrf-token 時該怎麼做吧</p>
</li>
</ol>
<h3>結語</h3>
<p>rails 很不安全，大家不要用？才不是，是因為我是初學者，這些眉眉角角都要自己學；相信強者大大們早就知道這些事了，所以這篇又是廢文了。</p>
<p>那麼，廢文，咱們下篇見！ </p>
<p>P.S. 因為是初學者，請各位大大們不吝指正，謝謝！</p>
]]></description><link>/post/2013/rails-csrf-notes.html</link><guid isPermaLink="true">/post/2013/rails-csrf-notes.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 30 Apr 2013 04:04:23 GMT</pubDate></item><item><title><![CDATA[welcome new partner]]></title><description><![CDATA[<h1>welcome new partner</h1>
<p>感謝大家對四點設計的幫忙，在上次徵才文 PO 出後的這段期間，小弟與很多高手有見面認識的機會。</p>
<p>是的，我們有找到新夥伴了。</p>
<p>歡迎新夥伴的加入，讓四點設計有機會可以為大家做出更多設計作品，以及讓這個世界可以多一些好玩的東西。</p>
<p>歡迎新夥伴的加入，感謝你加入四點設計 :)</p>
<p>也歡迎大家有空路過忠孝新生時，可以來四點設計聊聊天，互通有無，尋找合作方向。</p>
<p>感謝大家的幫忙，謝謝！</p>
]]></description><link>/post/2013/welcome-new-partner.html</link><guid isPermaLink="true">/post/2013/welcome-new-partner.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Mon, 18 Mar 2013 03:53:00 GMT</pubDate></item><item><title><![CDATA[RAILS_ENV 在 production 時的 rails s]]></title><description><![CDATA[<h1>RAILS_ENV 在 production 時的 rails s</h1>
<h2>情境</h2>
<p>明明 rails s 就可以測試 production 網站了，是這樣說的沒錯吧？</p>
<h2>怎麼做？</h2>
<ol>
<li><p>因為 <code>config/environments/production.rb</code> 檔案裡面有說 &quot;Disable Rails&#39;s static asset server (Apache or nginx will already do this)&quot;，所以把裡面的</p>
<p> <code>config.serve_static_assets = false</code></p>
<p> 改成</p>
<p> <code>config.serve_static_assets = true</code></p>
</li>
<li><p>照常使用：</p>
<p> <code>rake assets:precompile</code></p>
<p> <code>RAILS_ENV=production rails s</code></p>
</li>
<li><p>別忘記到有 apache/nginx 的 production 環境時把第一步驟改回來</p>
</li>
</ol>
<h2>結語</h2>
<p><del>我應該沒有誤人子弟，對吧？</del></p>
]]></description><link>/post/2013/rails_env-production-rails-s.html</link><guid isPermaLink="true">/post/2013/rails_env-production-rails-s.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 12 Mar 2013 17:03:24 GMT</pubDate></item><item><title><![CDATA[rails sqlite3 to mysql migration]]></title><description><![CDATA[<h1>rails sqlite3 to mysql migration</h1>
<h2>情境</h2>
<p>就是資料庫從 sqlite3 轉成使用 mysql。因為目前資料庫內容還算簡單，所以可以這樣作</p>
<h2>步驟</h2>
<ol>
<li><p>修改 <code>Gemfile</code>，加入：</p>
<pre><code> gem &#39;mysql2&#39;
 gem &#39;yaml_db&#39;</code></pre>
</li>
<li><p>bundle 一下，安裝剛剛那兩個 gem：</p>
<pre><code> $ bundle</code></pre>
</li>
<li><p>備份一下你的 db 設定檔</p>
<pre><code> $ cp config/database.yml config/database.yml.sqlite3</code></pre>
</li>
<li><p>把 DB 資料 dump 出來</p>
<pre><code> $ rake db:dump</code></pre>
</li>
<li><p>改一下 <code>config/database.yml</code>，把 <code>sqlite3</code> 換成 <code>mysql2</code></p>
</li>
<li><p>到 mysql 建資料庫</p>
<pre><code> rake db:setup
 rake db:schema:load</code></pre>
</li>
<li><p>把剛剛 <code>db:dump</code> 結果再 <code>load</code> 回去</p>
<pre><code> rake db:load</code></pre>
</li>
</ol>
<h2>參考資料</h2>
<ol>
<li><a href="http://stackoverflow.com/questions/1670154/convert-a-ruby-on-rails-app-from-sqlite-to-mysql">Convert a Ruby on Rails app from sqlite to MySQL?</a></li>
</ol>
<h2>結語</h2>
<p><del>不免俗又是廢文一篇，其實 google 就會幫你找到解答了，對吧？</del></p>
]]></description><link>/post/2013/rails-sqlite3-to-mysql-migration.html</link><guid isPermaLink="true">/post/2013/rails-sqlite3-to-mysql-migration.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Wed, 13 Mar 2013 04:44:06 GMT</pubDate></item><item><title><![CDATA[No value was provided for the parameter certificateIds]]></title><description><![CDATA[<h1>No value was provided for the parameter certificateIds</h1>
<p>對啦，會遇到這種事真的很奇怪，按下 renew 是沒有反應的，會出現 這樣的 alert：</p>
<pre><code>No value was provided for the parameter certificateIds</code></pre>
<p><img src="http://mind.deep.tw/images/foo/renew_fail.png" alt=""></p>
<p>那麼，解決方式呢？</p>
<p>讓我們看看 <a href="http://stackoverflow.com/questions/12253618/error-when-clicking-renew-for-ios-certificates">高手的回答</a>，就是要你去 <a href="https://developer.apple.com/devcenter/ios/index.action">這邊</a> 更新一下 provisioning profile</p>
<p>但是說來也怪，在過期的項目點了 <code>Modify</code> 按鈕進去按下 <code>submit</code> 按鈕也沒用，所以我就猜到一定是 apple 設計的表單太聰明，一定要變更一下 form 表單再變更回來，就可以按下 <code>submit</code> 按鈕，去更新 provisioning profile 啦！</p>
<p>然後就可以進 Xcode 的 Organizer 去按下那 <code>Refresh</code> 按鈕，那麼，就順利可以看到以下的結果：</p>
<p><img src="http://mind.deep.tw/images/foo/renew_success.png" alt=""></p>
<p><del>那麼，看似沒用的筆記文，咱們下次見！</del></p>
]]></description><link>/post/2013/ios-develop-no-value-was-provided-for-the-parameter-certificateids.html</link><guid isPermaLink="true">/post/2013/ios-develop-no-value-was-provided-for-the-parameter-certificateids.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Wed, 06 Mar 2013 18:02:44 GMT</pubDate></item><item><title><![CDATA[titanium tableview class name]]></title><description><![CDATA[<h1>titanium tableview class name</h1>
<p>標題說明一切，要記得，tableview 加上 className 就對了。</p>
<p><del>就這樣，但這篇不是廢文，記得就對了，詳細要自己研究，但非常重要</del></p>
]]></description><link>/post/2013/titanium-tableview-class-name.html</link><guid isPermaLink="true">/post/2013/titanium-tableview-class-name.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 05 Mar 2013 21:41:59 GMT</pubDate></item><item><title><![CDATA[[四點設計]文件分享-勞保、健保、勞退三合一表單]]></title><description><![CDATA[<h1>[四點設計]文件分享-勞保、健保、勞退三合一表單</h1>
<p>對，每次幫大家加薪，或公司增加人手的時候，你會用到這些：</p>
<ol>
<li><p><a href="http://www.bli.gov.tw/sub.aspx?a=J2aZevv6L6Y%3d">調整薪資用的</a></p>
</li>
<li><p><a href="http://www.bli.gov.tw/sub.aspx?a=umSMW5tDZMI%3D">增加人手用的</a></p>
</li>
</ol>
<p><del>這樣也算一篇？當然算啊！</del></p>
]]></description><link>/post/2013/4point-doc-3-in-1-form-for-staff.html</link><guid isPermaLink="true">/post/2013/4point-doc-3-in-1-form-for-staff.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 05 Mar 2013 19:19:39 GMT</pubDate></item><item><title><![CDATA[[四點設計]文件分享-新生兒健保申請 ]]></title><description><![CDATA[<h1>[四點設計]文件分享-新生兒健保申請 </h1>
<ol>
<li>填好<a href="http://www.nhi.gov.tw/Resource/webdata/12967_2_1020103%E8%AB%8B%E9%A0%98%E5%81%A5%E4%BF%9D%E5%8D%A1%E7%94%B3%E8%AB%8B%E8%A1%A8.pdf">請領健保卡申請表</a> (102 年 1/3 版本)</li>
<li>填好<a href="http://www.nhi.gov.tw/Resource/webdata/11428_2_2-1%E5%81%A5%E4%BF%9D%E6%8A%95%E4%BF%9D%E8%A1%A810111.pdf">公司健保加保</a>，或到<a href="http://www.nhi.gov.tw/webdata/webdata.aspx?menu=19&amp;menu_id=705&amp;WD_ID=773&amp;webdata_id=2220">健保局網站</a> 自行研究</li>
<li>拍小孩大頭照，兩吋 1 張</li>
<li>攜帶戶口名簿「正本」，直接去中央健保局申請 (100台北市中正區公園路15-1號5樓，捷運台北車站 M8 出口)</li>
</ol>
<iframe width="100%" height="400" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.com.tw/maps?q=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E5%85%AC%E5%9C%92%E8%B7%AF15-1%E8%99%9F&amp;aq=f&amp;ie=UTF8&amp;hl=zh-TW&amp;hq=&amp;hnear=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E5%85%AC%E5%9C%92%E8%B7%AF15-1%E8%99%9F&amp;ll=25.044786,121.517406&amp;spn=0.004053,0.007896&amp;t=m&amp;z=14&amp;brcurrent=3,0x3442a99bd1adbcc7:0xc5ab69bb7491162a,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;output=embed"></iframe>

<p><a href="https://maps.google.com.tw/maps?q=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E5%85%AC%E5%9C%92%E8%B7%AF15-1%E8%99%9F&amp;aq=f&amp;ie=UTF8&amp;hl=zh-TW&amp;hq=&amp;hnear=100%E5%8F%B0%E5%8C%97%E5%B8%82%E4%B8%AD%E6%AD%A3%E5%8D%80%E5%85%AC%E5%9C%92%E8%B7%AF15-1%E8%99%9F&amp;ll=25.044786,121.517406&amp;spn=0.004053,0.007896&amp;t=m&amp;z=14&amp;brcurrent=3,0x3442a99bd1adbcc7:0xc5ab69bb7491162a,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;source=embed">檢視較大的地圖</a></p>
]]></description><link>/post/2013/4point-doc-new-born-health-insurance.html</link><guid isPermaLink="true">/post/2013/4point-doc-new-born-health-insurance.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 05 Mar 2013 18:40:06 GMT</pubDate></item><item><title><![CDATA[在 Mac 中用 7zip 壓縮檔案，給 Windows 用戶時就免除亂碼問題]]></title><description><![CDATA[<h1>在 Mac 中用 7zip 壓縮檔案，給 Windows 用戶時就免除亂碼問題</h1>
<p>其實，善心的保哥已經在這篇文章 <a href="http://blog.miniasp.com/post/2012/05/12/How-to-correct-unzip-Mac-format-ZIP-file-with-chinese-filename-in-Windows.aspx">在 Mac 電腦壓縮的 ZIP 檔案如何正確在 Windows 下解壓縮</a> 告訴我們如果在 windows 要如何解決收到 Mac 來的壓縮檔總是亂碼的問題。</p>
<p>不過我因為情況不同，所以角度是 Mac user 提供壓縮檔給 Windows user，其解決方法如下(這裡提供的 command line 解決方案，或自行尋找 7zip on mac)：</p>
<ol>
<li><p>安裝 7zip</p>
<p> <code>$ brew install p7zip</code></p>
</li>
<li><p>直接用 7zip 壓縮檔案</p>
<p> <code>$ cd 你的檔案位置</code></p>
<p> <code>$ 7za a 你要的檔名</code></p>
</li>
</ol>
<p>就這樣，把壓縮好的檔案直接傳給你的朋友試試看 :)</p>
<p><del>就這樣，一篇廢文又產生了，我才不信已經用 homebrew 的人會需要看這種文章，看到標題就夠了；所以這篇只是給自己看的沒錯(蓋章)</del></p>
]]></description><link>/post/2013/mac-users-could-use-7zip-to-compress-files-for-windows-users.html</link><guid isPermaLink="true">/post/2013/mac-users-could-use-7zip-to-compress-files-for-windows-users.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Tue, 05 Mar 2013 03:25:10 GMT</pubDate></item><item><title><![CDATA[加入四點設計，開始設計自己的人生]]></title><description><![CDATA[<h1>加入四點設計，開始設計自己的人生</h1>
<p><img src="http://4point-inc.com/sandra.jpg" alt=""></p>
<h2>前情提要</h2>
<p><a href="http://4point-inc.com">四點設計</a>因為客戶對我們還不錯，所以在未來預期的日子裡，我們需要請您來幫忙，讓四點設計可以繼續成長、茁壯！在此也感謝大家的幫忙與相挺。</p>
<h2>職缺需求</h2>
<p>四點設計裡面的大家，全部都從事設計行業，平面設計、企劃設計、網站設計與程式設計。</p>
<p>我們此時此刻需要這樣的您(全職，或您喜歡的合作方式)：</p>
<ul>
<li>.NET MVC 程式設計師，或想要與 pct 一起學習 .NET MVC 的程式設計師</li>
<li>Rails 程式設計師，或想要與 pct 一起學習 Rails 的程式設計師</li>
<li>視覺設計師(對平面設計、網頁設計、App UI 有興趣的設計師)，雖然不是我這篇的目的，不過如果您真的不小心看到這篇文章，非常歡迎您來！</li>
</ul>
<p>不排斥程式語言，希望願意一起多看多學，一起進步、一起成長、一起想辦法完成個人夢想。</p>
<h2>薪資？</h2>
<p>不用擔心 22K，直接來面議吧 :)</p>
<h2>未來可能在四點設計接觸以下東西</h2>
<ul>
<li>設計的美感(請洽設計部)</li>
<li>程式碼版本控制，使用 git/github</li>
<li>編輯器 vim</li>
<li>IDE Visual Studio</li>
<li>網站框架 Rails</li>
<li>網站框架 .NET MVC</li>
<li>iOS/Android App 製作(Titanium or 原生開發)</li>
<li>程式語言 Javascript/CoffeeScript/PHP/Python/Ruby/.NET</li>
<li>網頁 RWD 設計 <del>對啦，這自己刻的 blog 還沒加入 RWD 啦！</del></li>
<li>作業系統 Mac、FreeBSD、Arch Linux</li>
<li>Unix/Linux command line 操作及 shell script</li>
<li>網頁伺服 Apache、nginx</li>
<li>您可能不小心會跟 pct 一起遇見高手並加以學習</li>
</ul>
<h2>學歷？</h2>
<p>因為公司做的東西還算單純，所以高中畢業有美感、會設計或者會寫程式就好了，對吧？</p>
<h2>公司地點</h2>
<p>四點設計位於：</p>
<blockquote>
<p><b>台北市忠孝東路二段 100 號五樓之四。</b></p>
</blockquote>
<p>所以：</p>
<blockquote>
<p>從忠孝新生捷運站 2 號出口步行五分鐘內可以到達。</p>
<p>如果剛好對優秀的 twMVC 聚會有興趣，走路到 3 號出口的伯朗咖啡就可參加。</p>
<p>公司對面就是光華商場。 <del>買電腦書、買 3C、逛金鍵盤有夠方便</del></p>
</blockquote>
<iframe width="100%" height="400" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.com.tw/maps/ms?msa=0&amp;msid=214503238037408218491.0004d64893a6a47757fc8&amp;brcurrent=3,0x3442a99bd1adbcc7:0xc5ab69bb7491162a,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;ie=UTF8&amp;t=m&amp;ll=25.042526,121.53132&amp;spn=0.003402,0.00456&amp;z=17&amp;output=embed"></iframe>

<p><a href="https://maps.google.com.tw/maps/ms?msa=0&amp;msid=214503238037408218491.0004d64893a6a47757fc8&amp;brcurrent=3,0x3442a99bd1adbcc7:0xc5ab69bb7491162a,0,0x3442ac6b61dbbd9d:0xc0c243da98cba64b&amp;ie=UTF8&amp;t=m&amp;ll=25.042526,121.53132&amp;spn=0.003402,0.00456&amp;z=17&amp;source=embed">在較大的地圖上查看四點設計位置</a></p>
<h2>公司設備</h2>
<p>雖然這不是套房出租，不過還是寫一下：</p>
<ul>
<li>會幫您準備 Mac 電腦，如果您不介意外觀，我會幫您在 Mac 電腦加入 SSD 及足夠的 RAM</li>
<li>個人電腦桌(長 142 公分 + 兩抽屜) x 1</li>
<li>個人座椅(一起去挑回來) x 1</li>
<li>小微波爐 x 1</li>
<li>小冰箱 x 1</li>
<li>咖啡壺 x 1</li>
<li>開飲機 x 1</li>
<li>需要脫鞋的木頭地板 x 1</li>
<li>小黑貓的陪伴 x 1 (副作用是小黑貓的亂抓技能)</li>
</ul>
<h2>公司福利</h2>
<ul>
<li>小黑貓的陪伴 <del>這點真的很棒，一定要算進去！</del></li>
<li>三節獎金</li>
<li>突然想到就會有的員工聚餐+慶生會</li>
<li>勞健保一定有，勞退絕對是公司幫您支付</li>
<li>領到的薪資跟政府看到的是一樣的，不會少報</li>
<li>跟政府單位一樣的上班日(所以是週休二日沒錯)</li>
<li>年假</li>
<li>在家上班？其實如果彼此配合得好，又未嘗不可？</li>
<li>閒暇之餘如果想要寫 code 貢獻國家社會，不小心會多 pct 一個人手來幫您</li>
<li><del>可惜公司現在還需要您的幫忙，此時此刻還沒有 18% 優惠利率</del></li>
</ul>
<h2>請您一定要斟酌的點</h2>
<ul>
<li>我們有養一隻從水塔救回來的可愛小黑貓，請您跟我們一起照顧牠</li>
<li>我們很少加班，不過這種話只能先騙進來再來體驗</li>
<li>我們自認為很溫馨在工作</li>
<li>我們喜歡在能力範圍內為社會貢獻</li>
<li><del>我們離行天宮很近，有時會全公司去團拜</del></li>
<li>那個叫 pct 的還算常作免費的東西給大家玩，請您幫他跟自己一起賺錢</li>
</ul>
<h2>四點設計方向</h2>
<p>我們是設計公司，所以：</p>
<ul>
<li>作國家的設計</li>
<li>作客戶的設計</li>
<li>作社群的設計</li>
<li>作自己的設計</li>
</ul>
<p>我們相信自己的設計作品除了美觀與實用兼具，而且簡明易用。</p>
<h2>歡迎</h2>
<p>四點設計歡迎您！</p>
<p><img src="http://4point-inc.com/rails.jpg" alt=""></p>
<p><a href="mailto:pct@4point-inc.com">請趕快寄信給 pct 吧</a></p>
]]></description><link>/post/2013/please-join-4point-design.html</link><guid isPermaLink="true">/post/2013/please-join-4point-design.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Fri, 22 Feb 2013 02:01:44 GMT</pubDate></item><item><title><![CDATA[blog test]]></title><description><![CDATA[<h1>blog test</h1>
<p><del>對啦，有沒有自己要寫 blog 前還要自己修一下自己亂改的 blog 系統的八卦？</del></p>
<p>沒錯，本篇是很廢的測試文章，自己測試自己留言 Orz...</p>
]]></description><link>/post/2013/blog-test.html</link><guid isPermaLink="true">/post/2013/blog-test.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Wed, 20 Feb 2013 22:23:49 GMT</pubDate></item><item><title><![CDATA[just go]]></title><description><![CDATA[<h1>just go</h1>
<p>以為年假收假前抱抱女兒浪費一下光陰就算了，沒想到 c9s 大大連續轉貼幾篇 go 的文章：<a href="http://www.kunli.info/2012/03/03/golang-feeling/">使用Go语言一段时间的感受</a>、<a href="http://blog.codingnow.com/2010/11/go_prime.html">Go 语言初步</a>，而且 c9s 大大也用 go 開發了 <a href="http://gotray.extremedev.org/">GoTray</a>，實在是<del>太黯然、太銷魂了</del>。</p>
<p>那麼，也跟著開始 go 吧，雖然之前總是沒有好好學習。</p>
<p>由於是 vim 愛好者，所以請在 .vimrc 加入這行<del>對啦，我改用 Vundle 了</del>：</p>
<p><code>Bundle &#39;nsf/gocode&#39;, {&#39;rtp&#39;: &#39;vim/&#39;}</code></p>
<p>然後配合 <a href="http://tour.golang.org/#1">這個教學</a>，開始 go 吧！</p>
<p><del>不過還是覺得 <a href="http://golang.org/doc/effective_go.html">Effective Go</a> 可以比較快看全部語法</del></p>
<p>相關資源：</p>
<ol>
<li><a href="http://www.plurk.com/p/i5y4k3">http://www.plurk.com/p/i5y4k3</a></li>
<li><a href="http://www.golang-book.com/">http://www.golang-book.com/</a></li>
<li><a href="http://www.miek.nl/projects/gobook/">http://www.miek.nl/projects/gobook/</a></li>
<li><a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/preface.md">簡體中文 build-web-application-with-golang</a></li>
</ol>
]]></description><link>/post/2013/just-go.html</link><guid isPermaLink="true">/post/2013/just-go.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Fri, 15 Feb 2013 22:58:34 GMT</pubDate></item><item><title><![CDATA[Hello, world]]></title><description><![CDATA[<h1>Hello, world</h1>
<p>又再次任性以為自己可以用喜歡的方式寫 blog，所以 clone 了對岸高手寫的 blogin, 重組、改寫成 <a href="https://github.com/pct/4press">4press</a>。</p>
<p>Just another blog system using node.js and build static html pages.</p>
<p>希望別再改了，希望是個新開始。</p>
<p>Hello, world.</p>
<p>Keep going!</p>
]]></description><link>/post/2013/hello-world.html</link><guid isPermaLink="true">/post/2013/hello-world.html</guid><dc:creator><![CDATA[pct]]></dc:creator><pubDate>Thu, 14 Feb 2013 00:07:46 GMT</pubDate></item></channel></rss>